set nocompatible
syntax enable
set number
set relativenumber
set showmode
set encoding=utf-8
set hidden
set laststatus=2
set title
set mouse=a
set ruler
set smarttab
set tabstop=4       " The width of a TAB is set to 2.
set shiftwidth=4    " Indents will have a width of 2
set softtabstop=4   " Sets the number of columns for a TAB
set autoindent
set smartindent
set expandtab
set backspace=indent,eol,start
set undofile
set undodir=~/.vim/undo
set ttimeoutlen=10
set foldlevelstart=99
filetype plugin indent on

" {{{ PLUGINS

call plug#begin()
Plug 'dylanaraps/wal.vim'
Plug 'cespare/vim-toml'
Plug 'scrooloose/nerdcommenter'
Plug 'othree/html5.vim'
Plug 'w0rp/ale'
Plug 'Raimondi/delimitMate'
Plug 'tpope/vim-fugitive'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'tpope/vim-eunuch'
Plug 'skywind3000/asyncrun.vim'
Plug 'tpope/vim-obsession'
Plug 'tmux-plugins/vim-tmux'
if has('nvim')
	Plug 'roxma/clang_complete'
	Plug 'roxma/nvim-completion-manager'
endif
Plug 'SirVer/ultisnips'
Plug 'junegunn/fzf', {'dir': '~/.fzf', 'do': './install --all'}
Plug 'junegunn/fzf.vim'
Plug 'mileszs/ack.vim'
call plug#end()

" }}} END PLUGINS

" {{{ PLUGIN SETTINGS

let g:asyncrun_trim=1
command! -bang -nargs=* -complete=file Make AsyncRun -program=make @ <args>

let g:ale_echo_msg_error_str='E'
let g:ale_echo_msg_warning_str='W'
let g:ale_echo_msg_format='[%linter%] %s [%severity%]'

let g:clang_library_path='/usr/lib/llvm-3.8/lib/libclang-3.8.so'

if executable('ag')
	let g:ackprg = 'ag --nogroup'
endif
" }}} END PLUGIN SETTINGS

" {{{ COLORSCHEME

source ~/.cache/wal/colors.vim
colorscheme wal
hi Normal ctermbg=none
"if has('gui_running')
	"colorscheme solarized
	"hi User1 guibg=#eee8d5 guifg=#586e75
	"hi User2 guibg=#073642 guifg=#93a1a1
	"hi User3 guibg=#073642 guifg=#dc322f
	"hi User4 guibg=#839496 guifg=#073642
"endif
execute 'hi User1 ctermbg=1 ctermfg=0 guibg='.g:color1.' guifg='.g:color0
execute 'hi User2 ctermbg=0 ctermfg=6 guibg='.g:color0.' guifg='.g:color6
execute 'hi User3 ctermbg=0 ctermfg=2 guibg='.g:color0.' guifg='.g:color2
execute 'hi User4 ctermbg=3* ctermfg=0 guibg='.g:color11.' guifg='.g:color0

set guifont=Liberation\ Mono\ 8
set guioptions-=m
set guioptions-=T
set guioptions-=r
set guioptions-=L

" }}} END COLORSCHEME

" {{{ STATUSLINE

set statusline=
set statusline+=%#PmenuSel#
set statusline+=%#LineNr#
set statusline+=%1*
set statusline+=%{Strip(fugitive#statusline())}
set statusline+=%2*
set statusline+=\ %t
set statusline+=%m\ 
set statusline+=%3*
set statusline+=%r
set statusline+=%2*
set statusline+=%=
set statusline+=%#CursorColumn#
set statusline+=%2*
"set statusline+=\ %y
set statusline+=%3*
set statusline+=%{LinterStatus()}
set statusline+=\ %{ObsessionStatus('[!]')}
set statusline+=\ %4*
set statusline+=\[Buf:%n
set statusline+=\ %p%%
set statusline+=\ %l/%L
set statusline+=\]

" }}} END STATUSLINE

" {{{ CUSTOM MAPPINGS

let g:mapleader=';'
inoremap ,, <esc>
nnoremap ,, <esc>
vnoremap ,, <esc>
inoremap <leader>w <esc>:w<CR>
nnoremap <leader>w :w<CR>
nnoremap <leader>q :q<CR>
nnoremap <leader>bs :ls<CR>:b
nnoremap <leader>so :so ~/.vim/vimrc<CR>
nnoremap <leader>ar :AsyncRun<space>
nnoremap <silent> <C-k> :ALEPreviousWrap<CR>
nnoremap <silent> <C-j> :ALENextWrap<CR>

" }}} END MAPPINGS

" {{{ FUNCTIONS

" helps with php syntax
function! PhpSyntaxOverride()
  hi! def link phpDocTags  phpDefine
  hi! def link phpDocParam phpType
endfunction

function! Strip(input)
	let l:branch = matchstr(a:input, '\(([^)]\+)\)')
	let l:branch = substitute(l:branch, '(', '[', '')
	let l:branch = substitute(l:branch, ')', ']', '')
	return l:branch
endfunction

function! LinterStatus() abort
	let l:counts = ale#statusline#Count(bufnr(''))

	let l:all_errors = l:counts.error + l:counts.style_error
	let l:all_non_errors = l:counts.total - l:all_errors

	if l:counts.total == 0 
		return ''
	else
		return printf(
						\ '%dW %dE',
						\ l:all_errors,
						\ l:all_errors
						\)
	endif
endfunction

" }}} END FUNCTIONS

" {{{ AUGROUPS/AUTOCMDS

augroup phpSyntaxOverride
  autocmd!
  autocmd FileType php call PhpSyntaxOverride()
augroup END

augroup vimrc
	autocmd User AsyncRunStart call asyncrun#quickfix_toggle(8, 1)
augroup END


augroup fileTypes
	autocmd BufNewFile,BufRead *.rs set filetype=rust
	autocmd FileType rust set expandtab shiftwidth=4 softtabstop=4
	autocmd FileType make set noexpandtab shiftwidth=8 softtabstop=0
	autocmd FileType vala set expandtab shiftwidth=4 softtabstop=4
	autocmd FileType python set expandtab shiftwidth=4 softtabstop=4
	autocmd BufWritePost *.tex AsyncRun pdflatex %
    autocmd BufWritePost *.md AsyncRun pandoc % -o %:r.pdf
augroup END

augroup QuickfixStatus
	au! BufWinEnter quickfix setlocal statusline=%t\ [%{g:asyncrun_status}]\ %{exists('w:quickfix_title')?\ '\ '.w:quickfix_title\ :\ ''}\ %=%-15(%l,%c%V%)\ %P
augroup END

" }}} END AUGROUPS/AUTOCOMMANDS
